/* Generated by AN DISI Unibo */ 
package it.unibo.actor0

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Actor0 ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "s0"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						itunibo.robot.coap.coapserverforctx.start(  )
						itunibo.robot.coap.coapserverforctx.add(myself)
						 //INJECT THE ROBOT SUPPORT into the resource
									itunibo.robotVirtual.virtualRobotSupport.create( myself  )		 
									var R = itunibo.robot.coap.coapserverforctx.getResource( myself.name )
									if( R != null ) R.setRobotSupport( itunibo.robotVirtual.virtualRobotSupport )
									itunibo.robotVirtual.virtualRobotSupport.init( "8999"  )		 
					}
				}	 
			}
		}
}
