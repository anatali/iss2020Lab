https://bitbucket.org/neuralassembly/simplemjpegview/src/master/
https://github.com/niqdev/ipcam-view
https://play.google.com/store/apps/details?id=com.tk.android.simplemjpeg
An application to watch MJPEG streaming video generated by MJPEG-capable network camera, 
e.g., Trek Ai-Ball and IP Webcam (Android app). 
Before connecting, please configure the resolution and the network address of your camera.

AndroidManifest.xml
<uses-permission  android: name = "android.permission.INTERNET"  />


activity_main.xml
<RelativeLayout 
  xmlns: android = "http://schemas.android.com/apk/res/android" 
  //  ↓ Append 
  xmlns: stream = "http://schemas.android.com/apk/res-auto" 
  .. . > 

    <!-↓ MjpegSurfaceView の Add-> 
    <com.github.niqdev.mjpeg.MjpegSurfaceView 
      android: id = "@ + id / mjpeg_view" 
      android: layout_width = "match_parent" 
      android: layout_height = "match_parent" 
      stream: type = "stream_default"  /> 
</ RelativeLayout>


MainActivity.kt
class  the MainActivity  :  AppCompatActivity ()  { 

    Val  mjpegView  by  the lazy  { 
        the findViewById ( R & lt . ID . mjpeg_view )  AS  MjpegView 
    } 
    Val  STREAM_URL  =  "http://192.168.1.XXX:8080/?action=stream" 
    Val  TIMEOUT  =  . 5 

    the override  Fun  onCreate ( savedInstanceState :  Bundle ?)  { 
        super . onCreate ( savedInstanceState ) 
        setContentView( R & lt . Layout . Activity_main ) 
    } 

    Fun  loadIpCam ()  { 
        Mjpeg . The newInstance () 
                . Open ( STREAM_URL ,  TIMEOUT ) 
                . Subscribe (  { 
                    mjpegView . SetSource ( IT ) 
                    mjpegView . SetDisplayMode ( the DisplayMode . BEST_FIT ) 
                    mjpegView . ShowFps ( to true ) 
                } , 
                { 
                    Log .e ( "loadIpCam" ,  it . toString ()); 
                    Toast . makeText ( this ,  "Error:"  +  it . toString (),  Toast . LENGTH_LONG ). show (); 
                }) 
    } 

    override  fun  onResume ()  { 
        super . onResume () 
        loadIpCam () 
    } 
}